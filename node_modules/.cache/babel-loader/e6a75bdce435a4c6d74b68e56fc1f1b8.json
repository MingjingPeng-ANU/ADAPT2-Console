{"ast":null,"code":"import _initializerDefineProperty from \"/Users/MingjingPeng/Projects/ADAPT2-Console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/MingjingPeng/Projects/ADAPT2-Console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/MingjingPeng/Projects/ADAPT2-Console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action, computed, reaction, createTransformer } from 'mobx';\nlet AuthStore = (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"currentUser\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"token\", _descriptor2, this);\n  } //@observable isLoading = false;\n  //@observable errors = undefined;\n  //@observable ws = undefined;\n  //@observable ns = observable.map();\n  // @observable notifications = [];\n  //@observable notifications = observable.map();\n  // @observable notifiTypes = [\n  //     \"Order payment has been verified by Admin.\",\n  //     \"Order has been canceled by QA.\",\n  //     \"Order status has been modified by Admin.\",\n  //     \"Order has been assigned to Counsellor by Admin.\",\n  //     \"Order has been assigned to QA by Admin.\",\n  //     \"Unread message\",\n  //     \"Error!\"\n  // ]\n  // constructor() {\n  //     reaction(\n  //         () => this.token,\n  //         token => {\n  //             if (token) {\n  //                 window.localStorage.setItem('jwt', token);\n  //             } else {\n  //                 window.localStorage.removeItem('jwt');\n  //             }\n  //         }\n  //     );\n  // }\n  // @action init(){\n  //     {\n  // if(this.currentUser.name){\n  //     const URL = config.WS_URL;\n  //     this.ws = new WebSocket(URL)\n  //     console.log(this.currentUser)\n  //     return agent.Account.getSaleWeChat(this.currentUser.iduser)\n  //         .then ((res) => {\n  //             if (res.length>0 && res[0].wechatName){\n  //                 let result = Object.keys(JSON.parse(res[0].wechatName)).map(key =>`${key}(${JSON.parse(res[0].wechatName)[key]})`).join('|');\n  //                 this.currentUser['wechat'] = result\n  //                 // this.currentUser['wechatName'] = result\n  //                 window.localStorage.setItem('current', JSON.stringify(this.currentUser))\n  //             }\n  //         })\n  //         .then(()=>{\n  //             if(this.currentUser.role.indexOf('counsellor')>=0){\n  //                 ordersStore.getUserOrders(this.currentUser.iduser)\n  //                 ordersStore.getUserOrdersDetail(this.currentUser.iduser)\n  //             }\n  //\n  //             if(this.currentUser.role.indexOf('saleman')>=0){\n  //                 //console.log(\"afasfas   \"+this.currentUser.iduser)\n  //                 customerStore.init();\n  //                 ordersStore.getSalesOrdersDetail(this.currentUser.iduser)\n  //                 ordersStore.getSaleOrdersResult(this.currentUser.iduser)\n  //                 ordersStore.loadSalePackage(this.currentUser.iduser)\n  //             }\n  //         })\n  // }\n  // }\n  // if(this.currentUser.name){\n  //     const URL = config.WS_URL;\n  //     this.ws = new WebSocket(URL)\n  //     console.log(this.currentUser)\n  //     return agent.Account.getSaleWeChat(this.currentUser.iduser)\n  //         .then ((res) => {\n  //             if (res.length>0 && res[0].wechatName){\n  //                 let result = Object.keys(JSON.parse(res[0].wechatName)).map(key =>`${key}(${JSON.parse(res[0].wechatName)[key]})`).join('|');\n  //                 this.currentUser['wechat'] = result\n  //                 // this.currentUser['wechatName'] = result\n  //                 window.localStorage.setItem('current', JSON.stringify(this.currentUser))\n  //             }\n  //         })\n  //         .then(()=>{\n  //             if(this.currentUser.role.indexOf('counsellor')>=0){\n  //                 ordersStore.getUserOrders(this.currentUser.iduser)\n  //                 ordersStore.getUserOrdersDetail(this.currentUser.iduser)\n  //             }\n  //\n  //             if(this.currentUser.role.indexOf('saleman')>=0){\n  //                 //console.log(\"afasfas   \"+this.currentUser.iduser)\n  //                 customerStore.init();\n  //                 ordersStore.getSalesOrdersDetail(this.currentUser.iduser)\n  //                 ordersStore.getSaleOrdersResult(this.currentUser.iduser)\n  //                 ordersStore.loadSalePackage(this.currentUser.iduser)\n  //             }\n  //         })\n  // }\n  // }\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"currentUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return JSON.parse(window.localStorage.getItem('current')) || {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"token\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return window.localStorage.getItem('jwt');\n  }\n})), _class);\nexport default new AuthStore();","map":{"version":3,"sources":["/Users/MingjingPeng/Projects/ADAPT2-Console/src/stores/authStore.js"],"names":["observable","action","computed","reaction","createTransformer","AuthStore","JSON","parse","window","localStorage","getItem"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAiDC,iBAAjD,QAA0E,MAA1E;IAGMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAAA;AAAA;;AAAA;AAAA,IAGZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACL;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;;AA7FY,C,qFACXL,U;;;;;WAAyBM,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAX,KAAoD,E;;yEAC7EV,U;;;;;WAAmBQ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,C;;;AA+FxB,eAAe,IAAIL,SAAJ,EAAf","sourcesContent":["import { observable, action, computed, reaction, createTransformer } from 'mobx';\n\n\nclass AuthStore {\n    @observable currentUser = JSON.parse(window.localStorage.getItem('current'))||{};\n    @observable token = window.localStorage.getItem('jwt');\n    //@observable isLoading = false;\n    //@observable errors = undefined;\n    //@observable ws = undefined;\n    //@observable ns = observable.map();\n    // @observable notifications = [];\n    //@observable notifications = observable.map();\n    // @observable notifiTypes = [\n    //     \"Order payment has been verified by Admin.\",\n    //     \"Order has been canceled by QA.\",\n    //     \"Order status has been modified by Admin.\",\n    //     \"Order has been assigned to Counsellor by Admin.\",\n    //     \"Order has been assigned to QA by Admin.\",\n    //     \"Unread message\",\n    //     \"Error!\"\n    // ]\n\n    // constructor() {\n    //     reaction(\n    //         () => this.token,\n    //         token => {\n    //             if (token) {\n    //                 window.localStorage.setItem('jwt', token);\n    //             } else {\n    //                 window.localStorage.removeItem('jwt');\n    //             }\n    //         }\n    //     );\n    // }\n\n    // @action init(){\n    //     {\n\n            // if(this.currentUser.name){\n            //     const URL = config.WS_URL;\n            //     this.ws = new WebSocket(URL)\n            //     console.log(this.currentUser)\n            //     return agent.Account.getSaleWeChat(this.currentUser.iduser)\n            //         .then ((res) => {\n            //             if (res.length>0 && res[0].wechatName){\n            //                 let result = Object.keys(JSON.parse(res[0].wechatName)).map(key =>`${key}(${JSON.parse(res[0].wechatName)[key]})`).join('|');\n            //                 this.currentUser['wechat'] = result\n            //                 // this.currentUser['wechatName'] = result\n            //                 window.localStorage.setItem('current', JSON.stringify(this.currentUser))\n            //             }\n            //         })\n            //         .then(()=>{\n            //             if(this.currentUser.role.indexOf('counsellor')>=0){\n            //                 ordersStore.getUserOrders(this.currentUser.iduser)\n            //                 ordersStore.getUserOrdersDetail(this.currentUser.iduser)\n            //             }\n            //\n            //             if(this.currentUser.role.indexOf('saleman')>=0){\n            //                 //console.log(\"afasfas   \"+this.currentUser.iduser)\n            //                 customerStore.init();\n            //                 ordersStore.getSalesOrdersDetail(this.currentUser.iduser)\n            //                 ordersStore.getSaleOrdersResult(this.currentUser.iduser)\n            //                 ordersStore.loadSalePackage(this.currentUser.iduser)\n            //             }\n            //         })\n            // }\n       // }\n\n        // if(this.currentUser.name){\n        //     const URL = config.WS_URL;\n        //     this.ws = new WebSocket(URL)\n        //     console.log(this.currentUser)\n        //     return agent.Account.getSaleWeChat(this.currentUser.iduser)\n        //         .then ((res) => {\n        //             if (res.length>0 && res[0].wechatName){\n        //                 let result = Object.keys(JSON.parse(res[0].wechatName)).map(key =>`${key}(${JSON.parse(res[0].wechatName)[key]})`).join('|');\n        //                 this.currentUser['wechat'] = result\n        //                 // this.currentUser['wechatName'] = result\n        //                 window.localStorage.setItem('current', JSON.stringify(this.currentUser))\n        //             }\n        //         })\n        //         .then(()=>{\n        //             if(this.currentUser.role.indexOf('counsellor')>=0){\n        //                 ordersStore.getUserOrders(this.currentUser.iduser)\n        //                 ordersStore.getUserOrdersDetail(this.currentUser.iduser)\n        //             }\n        //\n        //             if(this.currentUser.role.indexOf('saleman')>=0){\n        //                 //console.log(\"afasfas   \"+this.currentUser.iduser)\n        //                 customerStore.init();\n        //                 ordersStore.getSalesOrdersDetail(this.currentUser.iduser)\n        //                 ordersStore.getSaleOrdersResult(this.currentUser.iduser)\n        //                 ordersStore.loadSalePackage(this.currentUser.iduser)\n        //             }\n        //         })\n        // }\n    // }\n\n}\n\nexport default new AuthStore();\n"]},"metadata":{},"sourceType":"module"}